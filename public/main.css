body {
    background-color: black;
    color: #0aa;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bold;
    font-size: medium;
}

html,
body {
    width: 100%;
    height: 100%;
    border: 0;
    padding: 0;
    margin: 0;
}

ul {
    list-style: none;
    padding: 10px;
}

/* https://grid.layoutit.com/ */
#grid-container {
    height: 100vh;
    width: 100%;

    display: grid;
    grid-template-columns: 270px minmax(0, 1fr) 270px; /* minmax(0,..) avoids keyboard content from increasing cell size.https://css-tricks.com/preventing-a-grid-blowout/ */
    grid-template-rows: 0fr 1fr 0fr 0fr;
    gap: 5px 5px;
    grid-template-areas:
        "headerArea headerArea headerArea"
        "leftArea roomArea rightArea"
        "leftArea chatArea rightArea"
        "leftArea pianoArea rightArea";
}

#grid-container>* {
    background-color: #222;
}

#roomArea {
    background-color: black;
    color: #339;
    background-repeat: no-repeat;
    position: relative;
    transition: background-position 1s;
    /* transition-delay: .5s; */
}

.component {
    padding: 5px;
    width: 100%;
    border: 4px solid #044;
    box-sizing: border-box;
    margin-bottom: 20px;
}

.component>h2 {
    background-color: #044;
    padding: 5px;
    margin: 0;
    border: 0;
    font-size: larger;
}

.headerArea {
    padding: 3px;
}
.headerArea span {
    margin:0;
    font-size: medium;
}

.headerArea a:link,
.headerArea a:visited,
.headerArea a {
    color: #066;
}

@keyframes avatarBump1 {
    0% {
        transform: translate(0px, 0px);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(0px, 4px);
    }

    100% {
        transform: translate(0px, 0px);
    }
}

/* exact duplicate of the other, so when i toggle between the classes, it resets the animation. why doesn't CSS let you reset one-shot animations?? */
@keyframes avatarBump2 {
    0% {
        transform: translate(0px, 0px);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(0px, 4px);
    }

    100% {
        transform: translate(0px, 0px);
    }
}


.userAvatarActivityBump1 {
    animation: avatarBump1 .2s 1;
}

.userAvatarActivityBump2 {
    animation: avatarBump2 .2s 1;
}

.userAvatar {
    position: absolute;
    transition: top .5s, left .5s;
    border-radius: 5px;
    border-width: 1px;
    border-style: solid;
    padding: 7px;
    background-color: rgba(0, 0, 0, .5);
    text-align: center;
    filter: drop-shadow(0px 10px 10px rgba(0, 0, 0, .5));
}

.userAvatar.me {
    border-top-width: 10px;
}

#chatArea {
    padding: 10px;
}

.chatLog {
    position: absolute;
    bottom: 0;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    color: #aaa;
    pointer-events: none;            
}


#pianoArea {
    overflow-y:hidden;
    height:130px;

    display: flex;
    align-items: center;
    justify-content: center;
}


