

/* @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Heebo:wght@300;400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Catamaran:wght@300;400;500;700&display=swap'); */
@import url('https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,300;0,400;0,600;0,700;1,400&display=swap');

body {
    background-color: black;
    color: #0aa;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-size: medium;
}

html,
body {
    width: 100%;
    height: 100%;
    border: 0;
    padding: 0;
    margin: 0;
}
*:focus {
    outline: none;
}
a:link,
a:visited {
    text-decoration: none;
}

ul {
    list-style: none;
    padding: 10px;
    margin:0;
}

input[type="text" i] {
    background-color: #444;
    border: 2px solid #055;
    color: #0cc;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: normal;
    font-size: small;
    margin: 2px;
}
input[type="text" i]:focus {
    border: 2px solid #0cc;
}

button {
    background-color: #444;
    border: 3px solid #888;
    color: #0bb;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: bold;
    font-size: small;
    margin: 2px;
    border-radius: 4px;
}
button:focus {
    border: 3px solid #0ff;
}

.validationError {
    color:red;
}

/* https://grid.layoutit.com/ */
#grid-container {
    height: 100vh;
    width: 100%;

    display: grid;
    grid-template-columns: 270px minmax(0, 1fr) 300px; /* minmax(0,..) avoids keyboard content from increasing cell size.https://css-tricks.com/preventing-a-grid-blowout/ */
    grid-template-rows: 0fr 1fr 0fr 0fr;
    gap: 5px 5px;
    grid-template-areas:
        "headerArea headerArea headerArea"
        "leftArea roomArea rightArea"
        "leftArea chatArea rightArea"
        "leftArea pianoArea rightArea";
}

#grid-container>* {
    background-color: #222;
}

.roomArea {
    background-color: black;
    color: #339;
    background-repeat: no-repeat;
    position: relative;
    overflow:hidden;
    transition: background-position 1s;
}

.roomArea.roomWelcomeNoTransition {
	transition: background-position 0s;
}

#leftArea,
#rightArea {
    display: flex;
    flex-direction: column;    
    overflow-y:auto;
}

@keyframes screenFadeOut {
    10% { opacite: 100%}
    100% { opacity: 0%; }
}

#roomArea .screen {
    background-color: black;
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    opacity: 100%;
    animation: screenFadeOut 1s 1;
    animation-fill-mode: forwards;
}

.component {
    width: 100%;
    color: #0aa;
    border: 4px solid #044;
    box-sizing: border-box;
    margin-bottom: 20px;
    border-radius: 5px;
}

.component>h2 {
    background-color: #044;
    padding-left: 5px;
    margin: 0;
    border: 0;
    font-size: larger;
}

#roomArea .component {
    margin-top:30px;
}

.userPing {
    font-size: smaller;
    font-style: italic;
    font-weight: normal;
}

.headerArea {
    padding: 3px;
}
.headerArea span {
    margin:0;
    font-size: medium;
}

.headerArea a:link,
.headerArea a:visited,
.headerArea a {
    color: #9a6c7b;
}

@keyframes avatarBump1 {
    0% {
        transform: translate(-50%, -50%);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(-50%, calc(-50% + 4px));
    }

    100% {
        transform: translate(-50%, -50%);
    }
}

/* exact duplicate of the other, so when i toggle between the classes, it resets the animation. why doesn't CSS let you reset one-shot animations?? */
@keyframes avatarBump2 {
    0% {
        transform: translate(-50%, -50%);
        animation-timing-function: ease-in-out;
    }

    10% {
        transform: translate(-50%, calc(-50% + 4px));
    }

    100% {
        transform: translate(-50%, -50%);
    }
}


.userAvatarActivityBump1 {
    animation: avatarBump1 .2s 1;
}

.userAvatarActivityBump2 {
    animation: avatarBump2 .2s 1;
}

.userAvatar {
    pointer-events: none; /* allow clicks to be processed by the room itself, not the item. */
    position: absolute;
    transition: top .5s, left .5s;
    border-radius: 5px;
    border-width: 1px;
    border-style: solid;
    padding: 7px;
    background-color: rgba(0, 0, 0, .5);
    text-align: center;
    filter: drop-shadow(0px 10px 5px rgba(0, 0, 0, .7));
    transform: translate(-50%, -50%); /* this puts the "origin" of the element in the center. */
}

.userAvatar.me {
    border-top-width: 10px;
}

.userAvatar.roomWelcomeNoTransition {
	transition: top 0s, left 0s;
}

.userAvatar .userAvatarInstrument button {
    pointer-events: all;
}

#chatArea {
    padding: 10px;
    display:flex;
}

#chatArea input {
    flex-grow:1;
}

.shortChatLog {
    position: absolute;
    bottom: 0;
    width:100%; /* important because if you have 1 message that cannot be wrapped, it will make the chat log area grow wider, and everyone's messages will get cutoff. this allows other long messages to still wrap.*/
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;/*stroke*/
    color: #aaa;
    pointer-events: none;

    -webkit-mask-image: linear-gradient(transparent, transparent 25%, rgba(0, 0, 0, 1.0) 60%, rgba(0, 0, 0, 1.0));
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}


.fullChatLog {
    overflow-y: scroll;
    position: absolute;
    bottom: 0;
    width:100%; /* important because if you have 1 message that cannot be wrapped, it will make the chat log area grow wider, and everyone's messages will get cutoff. this allows other long messages to still wrap.*/
    /*text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;/*stroke*/
    color: #aaa;
    background-color: #000000d4;

    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}
.fullChatLog ul {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;    
}

button.switchChatView
{
    position:absolute;
    top:0;
    right:40px;
}

#pianoArea {
    overflow-y:hidden;
    height:130px;

    display: flex;
    align-items: center;
    justify-content: center;
}


#announcementArea {
    color: #be62ec;
    text-align: center;
    background-color: #00000087;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
}

@keyframes blinker3 { to { opacity: 0; } }

#roomAlertArea {
    color: #ff0000;
    text-align: center;
    background-color: #000000C0;
    text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    padding: 15px;
    font-size: 32px;
    font-weight: bold;
    margin-top: 5px;
}
#roomAlertArea button {
    font-size: large;
}

#roomAlertArea > span {
    animation: blinker3 .8s ease-in-out infinite alternate;     
}

.chatLogEntryNick {
}

.chatLogEntryJoin {
}

.chatLogEntryPart {
}

.chatLogEntryAggregate,
.chatLogEntryNick,
.chatLogEntryJoin,
.chatLogEntryPart {
    font-style: italic;
    font-size: smaller;
    opacity:50%;
    font-weight: normal;
}

.chatLogEntryChat {
}


button.muteButton,
button.muteButton:focus
{
    border:0;
}


.userName {
    font-weight: bold;
}
  
  .cheer {
    position:absolute;
    pointer-events:none;
  }
  #cheerControl {
      position:absolute;
      top:0;
      left:0;
  }
  #cheerControl input[type="text" i] {
      width:2em;
  }
  #cheerControl .cheerButton {
    background-color: #444;
    border: 3px solid #888;
    color: #0bb;
    font-family: 'Overpass', sans-serif; /*font-family: 'Courier New', Courier, monospace;*/
    font-weight: bold;
    font-size: small;
    margin: 2px;
    border-radius: 4px;
    padding:2px;
    display:inline;
    cursor:pointer;
  }
  
  @keyframes floatY0 {
    to {transform: translateY(50px);}
  }
  @keyframes floatX0 {
    to {transform: translate(150px);}
  }
  
  @keyframes floatY1 {
    to {transform: translateY(-150px);}
  }
  @keyframes floatX1 {
    to {transform: translate(-150px);}
  }
  @keyframes floatOpacity {
    to {opacity: 0;}
  }
  
  
  
.idleIndicator {
    color: #aaa;
    font-size:smaller;
    font-style: italic;
}

ul.instParamList {
    white-space: nowrap;
    overflow-x: hidden;
}

ul.instParamList label {
    font-size:smaller;
    color:#ccc;
    cursor: pointer;
}

ul.instParamList input[type="range" i] {
    margin:0;
}

.instParamGroup {
    margin: 0;
    padding: 1px;
    min-inline-size: auto;
    border: 2px solid #066;
    border-radius: 15px;
}
.instParamGroup legend {
    cursor: pointer;
}

.instParamList .paramSpacer {
    margin-top:15px;
}
.instParamList .paramSpacer:first-child {
    margin-top:0;
}

.presetList,
.presetListControls {
    padding:5px;
}
.presetList li,
.presetListControls li {
    cursor: pointer;
    font-size: smaller;
    color: #aaa;
    border: 2px solid #044;
    background-color: #044;
    padding: 2px;
    margin: 0;
    padding-left: 6px;
}

.presetList li:hover,
.presetList li:active,
.presetListControls li:hover,
.presetListControls li:active
 {
    background-color: #066;
}


.presetListControls li {
    background-color: #444;
    font-style: italic;
}
.presetListControls li:hover,
.presetListControls li:active
 {
    background-color: #666;
}

.roomItem {
    border:5px solid blue;
    box-sizing: border-box;
    background:#00000061;
    text-align: center;
    position: absolute;
    transition: top 1s, left 1s;
    pointer-events: none; /* allow clicks to be processed by the room itself, not the item. */
    cursor: pointer;
    color: #dd0;
    font-weight: bold;
}

.roomItem.roomWelcomeNoTransition
{
    transition: top 0s, left 0s;
}

.roomSign {
    position: absolute;

    border-radius: 6px;
    border: 0px;
    box-sizing: border-box;
    padding: 15px;
    transition: top 1s, left 1s;
    transform: translate(-50%, -110%); /* this puts the "origin" of the element in the center. */

    background:#00000080;
    font-size: 16px;
    text-align: center;
    color: #dd0;
}

.roomSign a:link,
.roomSign a:visited {
    color: #dd0;
}



.worldStatus .room {
    margin:5px;
}

.worldStatus .room h2 {
    margin: 0;
    font-size: medium;
    display: inline;
}

.roomStats,
.worldStatus .room ul.roomStats
{
    display: inline;
    list-style: none;
}

.roomStats li,
.worldStatus .room ul.roomStats li
{
    display: inline;
}


.worldStatus .room ul.userList {

}

.worldStatus .room ul.userList li {

}




